
wc:     file format elf32-i386
wc
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048430

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000007e0 memsz 0x000007e0 flags r-x
    LOAD off    0x00000f08 vaddr 0x08049f08 paddr 0x08049f08 align 2**12
         filesz 0x0000012c memsz 0x00000130 flags rw-
 DYNAMIC off    0x00000f14 vaddr 0x08049f14 paddr 0x08049f14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00000704 vaddr 0x08048704 paddr 0x08048704 align 2**2
         filesz 0x0000002c memsz 0x0000002c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00000f08 vaddr 0x08049f08 paddr 0x08049f08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048370
  FINI                 0x080486d4
  INIT_ARRAY           0x08049f08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x08049f0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804826c
  SYMTAB               0x080481cc
  STRSZ                0x00000077
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804a000
  PLTRELSZ             0x00000040
  PLTREL               0x00000011
  JMPREL               0x08048330
  REL                  0x08048328
  RELSZ                0x00000008
  RELENT               0x00000008
  VERNEED              0x080482f8
  VERNEEDNUM           0x00000001
  VERSYM               0x080482e4

Version References:
  required from libc.so.6:
    0x0d696911 0x00 03 GLIBC_2.1
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000a0  080481cc  080481cc  000001cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000077  0804826c  0804826c  0000026c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000014  080482e4  080482e4  000002e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  080482f8  080482f8  000002f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000008  08048328  08048328  00000328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000040  08048330  08048330  00000330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048370  08048370  00000370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000090  080483a0  080483a0  000003a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000002a2  08048430  08048430  00000430  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000014  080486d4  080486d4  000006d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       0000001c  080486e8  080486e8  000006e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000002c  08048704  08048704  00000704  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000b0  08048730  08048730  00000730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000004  08049f08  08049f08  00000f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000004  08049f0c  08049f0c  00000f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000004  08049f10  08049f10  00000f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000e8  08049f14  08049f14  00000f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000004  08049ffc  08049ffc  00000ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      0000002c  0804a000  0804a000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000008  0804a02c  0804a02c  0000102c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000004  0804a034  0804a034  00001034  2**0
                  ALLOC
 25 .comment      00000056  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481cc l    d  .dynsym	00000000              .dynsym
0804826c l    d  .dynstr	00000000              .dynstr
080482e4 l    d  .gnu.version	00000000              .gnu.version
080482f8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048328 l    d  .rel.dyn	00000000              .rel.dyn
08048330 l    d  .rel.plt	00000000              .rel.plt
08048370 l    d  .init	00000000              .init
080483a0 l    d  .plt	00000000              .plt
08048430 l    d  .text	00000000              .text
080486d4 l    d  .fini	00000000              .fini
080486e8 l    d  .rodata	00000000              .rodata
08048704 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
08048730 l    d  .eh_frame	00000000              .eh_frame
08049f08 l    d  .init_array	00000000              .init_array
08049f0c l    d  .fini_array	00000000              .fini_array
08049f10 l    d  .jcr	00000000              .jcr
08049f14 l    d  .dynamic	00000000              .dynamic
08049ffc l    d  .got	00000000              .got
0804a000 l    d  .got.plt	00000000              .got.plt
0804a02c l    d  .data	00000000              .data
0804a034 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    df *ABS*	00000000              crtstuff.c
08049f10 l     O .jcr	00000000              __JCR_LIST__
08048470 l     F .text	00000000              deregister_tm_clones
080484a0 l     F .text	00000000              register_tm_clones
080484e0 l     F .text	00000000              __do_global_dtors_aux
0804a034 l     O .bss	00000001              completed.6600
08049f0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048500 l     F .text	00000000              frame_dummy
08049f08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              wc.c
00000000 l    df *ABS*	00000000              crtstuff.c
080487dc l     O .eh_frame	00000000              __FRAME_END__
08049f10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
08049f0c l       .init_array	00000000              __init_array_end
08049f14 l     O .dynamic	00000000              _DYNAMIC
08049f08 l       .init_array	00000000              __init_array_start
0804a000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
080486d0 g     F .text	00000002              __libc_csu_fini
00000000       F *UND*	00000000              getline@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
08048460 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804a02c  w      .data	00000000              data_start
00000000       F *UND*	00000000              printf@@GLIBC_2.0
0804a034 g       .data	00000000              _edata
080486d4 g     F .fini	00000000              _fini
0804a02c g       .data	00000000              __data_start
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804a030 g     O .data	00000000              .hidden __dso_handle
080486ec g     O .rodata	00000004              _IO_stdin_used
00000000       F *UND*	00000000              strlen@@GLIBC_2.0
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
08048660 g     F .text	00000061              __libc_csu_init
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
0804a038 g       .bss	00000000              _end
08048430 g     F .text	00000000              _start
080486e8 g     O .rodata	00000004              _fp_hw
0804a034 g       .bss	00000000              __bss_start
0804852d g     F .text	0000012e              main
00000000       F *UND*	00000000              strtok@@GLIBC_2.0
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a034 g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
08048370 g     F .init	00000000              _init



Disassembly of section .init:

08048370 <_init>:
 8048370:	53                   	push   %ebx
 8048371:	83 ec 08             	sub    $0x8,%esp
 8048374:	e8 e7 00 00 00       	call   8048460 <__x86.get_pc_thunk.bx>
 8048379:	81 c3 87 1c 00 00    	add    $0x1c87,%ebx
 804837f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048385:	85 c0                	test   %eax,%eax
 8048387:	74 05                	je     804838e <_init+0x1e>
 8048389:	e8 42 00 00 00       	call   80483d0 <__gmon_start__@plt>
 804838e:	83 c4 08             	add    $0x8,%esp
 8048391:	5b                   	pop    %ebx
 8048392:	c3                   	ret    

Disassembly of section .plt:

080483a0 <getline@plt-0x10>:
 80483a0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483a6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483ac:	00 00                	add    %al,(%eax)
	...

080483b0 <getline@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 00 00 00 00       	push   $0x0
 80483bb:	e9 e0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483c0 <printf@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 08 00 00 00       	push   $0x8
 80483cb:	e9 d0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483d0 <__gmon_start__@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483d6:	68 10 00 00 00       	push   $0x10
 80483db:	e9 c0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483e0 <exit@plt>:
 80483e0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483e6:	68 18 00 00 00       	push   $0x18
 80483eb:	e9 b0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483f0 <strlen@plt>:
 80483f0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483f6:	68 20 00 00 00       	push   $0x20
 80483fb:	e9 a0 ff ff ff       	jmp    80483a0 <_init+0x30>

08048400 <__libc_start_main@plt>:
 8048400:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048406:	68 28 00 00 00       	push   $0x28
 804840b:	e9 90 ff ff ff       	jmp    80483a0 <_init+0x30>

08048410 <fopen@plt>:
 8048410:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048416:	68 30 00 00 00       	push   $0x30
 804841b:	e9 80 ff ff ff       	jmp    80483a0 <_init+0x30>

08048420 <strtok@plt>:
 8048420:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048426:	68 38 00 00 00       	push   $0x38
 804842b:	e9 70 ff ff ff       	jmp    80483a0 <_init+0x30>

Disassembly of section .text:

08048430 <_start>:
 8048430:	31 ed                	xor    %ebp,%ebp
 8048432:	5e                   	pop    %esi
 8048433:	89 e1                	mov    %esp,%ecx
 8048435:	83 e4 f0             	and    $0xfffffff0,%esp
 8048438:	50                   	push   %eax
 8048439:	54                   	push   %esp
 804843a:	52                   	push   %edx
 804843b:	68 d0 86 04 08       	push   $0x80486d0
 8048440:	68 60 86 04 08       	push   $0x8048660
 8048445:	51                   	push   %ecx
 8048446:	56                   	push   %esi
 8048447:	68 2d 85 04 08       	push   $0x804852d
 804844c:	e8 af ff ff ff       	call   8048400 <__libc_start_main@plt>
 8048451:	f4                   	hlt    
 8048452:	66 90                	xchg   %ax,%ax
 8048454:	66 90                	xchg   %ax,%ax
 8048456:	66 90                	xchg   %ax,%ax
 8048458:	66 90                	xchg   %ax,%ax
 804845a:	66 90                	xchg   %ax,%ax
 804845c:	66 90                	xchg   %ax,%ax
 804845e:	66 90                	xchg   %ax,%ax

08048460 <__x86.get_pc_thunk.bx>:
 8048460:	8b 1c 24             	mov    (%esp),%ebx
 8048463:	c3                   	ret    
 8048464:	66 90                	xchg   %ax,%ax
 8048466:	66 90                	xchg   %ax,%ax
 8048468:	66 90                	xchg   %ax,%ax
 804846a:	66 90                	xchg   %ax,%ax
 804846c:	66 90                	xchg   %ax,%ax
 804846e:	66 90                	xchg   %ax,%ax

08048470 <deregister_tm_clones>:
 8048470:	b8 37 a0 04 08       	mov    $0x804a037,%eax
 8048475:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 804847a:	83 f8 06             	cmp    $0x6,%eax
 804847d:	77 01                	ja     8048480 <deregister_tm_clones+0x10>
 804847f:	c3                   	ret    
 8048480:	b8 00 00 00 00       	mov    $0x0,%eax
 8048485:	85 c0                	test   %eax,%eax
 8048487:	74 f6                	je     804847f <deregister_tm_clones+0xf>
 8048489:	55                   	push   %ebp
 804848a:	89 e5                	mov    %esp,%ebp
 804848c:	83 ec 18             	sub    $0x18,%esp
 804848f:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048496:	ff d0                	call   *%eax
 8048498:	c9                   	leave  
 8048499:	c3                   	ret    
 804849a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080484a0 <register_tm_clones>:
 80484a0:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 80484a5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484aa:	c1 f8 02             	sar    $0x2,%eax
 80484ad:	89 c2                	mov    %eax,%edx
 80484af:	c1 ea 1f             	shr    $0x1f,%edx
 80484b2:	01 d0                	add    %edx,%eax
 80484b4:	d1 f8                	sar    %eax
 80484b6:	75 01                	jne    80484b9 <register_tm_clones+0x19>
 80484b8:	c3                   	ret    
 80484b9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484be:	85 d2                	test   %edx,%edx
 80484c0:	74 f6                	je     80484b8 <register_tm_clones+0x18>
 80484c2:	55                   	push   %ebp
 80484c3:	89 e5                	mov    %esp,%ebp
 80484c5:	83 ec 18             	sub    $0x18,%esp
 80484c8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484cc:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 80484d3:	ff d2                	call   *%edx
 80484d5:	c9                   	leave  
 80484d6:	c3                   	ret    
 80484d7:	89 f6                	mov    %esi,%esi
 80484d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484e0 <__do_global_dtors_aux>:
 80484e0:	80 3d 34 a0 04 08 00 	cmpb   $0x0,0x804a034
 80484e7:	75 13                	jne    80484fc <__do_global_dtors_aux+0x1c>
 80484e9:	55                   	push   %ebp
 80484ea:	89 e5                	mov    %esp,%ebp
 80484ec:	83 ec 08             	sub    $0x8,%esp
 80484ef:	e8 7c ff ff ff       	call   8048470 <deregister_tm_clones>
 80484f4:	c6 05 34 a0 04 08 01 	movb   $0x1,0x804a034
 80484fb:	c9                   	leave  
 80484fc:	f3 c3                	repz ret 
 80484fe:	66 90                	xchg   %ax,%ax

08048500 <frame_dummy>:
 8048500:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048505:	85 c0                	test   %eax,%eax
 8048507:	74 1f                	je     8048528 <frame_dummy+0x28>
 8048509:	b8 00 00 00 00       	mov    $0x0,%eax
 804850e:	85 c0                	test   %eax,%eax
 8048510:	74 16                	je     8048528 <frame_dummy+0x28>
 8048512:	55                   	push   %ebp
 8048513:	89 e5                	mov    %esp,%ebp
 8048515:	83 ec 18             	sub    $0x18,%esp
 8048518:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804851f:	ff d0                	call   *%eax
 8048521:	c9                   	leave  
 8048522:	e9 79 ff ff ff       	jmp    80484a0 <register_tm_clones>
 8048527:	90                   	nop
 8048528:	e9 73 ff ff ff       	jmp    80484a0 <register_tm_clones>

0804852d <main>:
 804852d:	55                   	push   %ebp
 804852e:	89 e5                	mov    %esp,%ebp
 8048530:	83 e4 f0             	and    $0xfffffff0,%esp
 8048533:	83 ec 40             	sub    $0x40,%esp
 8048536:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 804853a:	7f 0c                	jg     8048548 <main+0x1b>
 804853c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048543:	e8 98 fe ff ff       	call   80483e0 <exit@plt>
 8048548:	8b 45 0c             	mov    0xc(%ebp),%eax
 804854b:	83 c0 04             	add    $0x4,%eax
 804854e:	8b 00                	mov    (%eax),%eax
 8048550:	c7 44 24 04 f0 86 04 	movl   $0x80486f0,0x4(%esp)
 8048557:	08 
 8048558:	89 04 24             	mov    %eax,(%esp)
 804855b:	e8 b0 fe ff ff       	call   8048410 <fopen@plt>
 8048560:	89 44 24 38          	mov    %eax,0x38(%esp)
 8048564:	83 7c 24 38 00       	cmpl   $0x0,0x38(%esp)
 8048569:	75 0c                	jne    8048577 <main+0x4a>
 804856b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048572:	e8 69 fe ff ff       	call   80483e0 <exit@plt>
 8048577:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
 804857e:	00 
 804857f:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 8048586:	00 
 8048587:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804858e:	00 
 804858f:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8048596:	00 
 8048597:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804859e:	00 
 804859f:	eb 59                	jmp    80485fa <main+0xcd>
 80485a1:	8b 44 24 24          	mov    0x24(%esp),%eax
 80485a5:	89 04 24             	mov    %eax,(%esp)
 80485a8:	e8 43 fe ff ff       	call   80483f0 <strlen@plt>
 80485ad:	8b 54 24 28          	mov    0x28(%esp),%edx
 80485b1:	01 d0                	add    %edx,%eax
 80485b3:	89 44 24 28          	mov    %eax,0x28(%esp)
 80485b7:	8b 44 24 24          	mov    0x24(%esp),%eax
 80485bb:	c7 44 24 04 f2 86 04 	movl   $0x80486f2,0x4(%esp)
 80485c2:	08 
 80485c3:	89 04 24             	mov    %eax,(%esp)
 80485c6:	e8 55 fe ff ff       	call   8048420 <strtok@plt>
 80485cb:	89 44 24 34          	mov    %eax,0x34(%esp)
 80485cf:	eb 1d                	jmp    80485ee <main+0xc1>
 80485d1:	83 44 24 2c 01       	addl   $0x1,0x2c(%esp)
 80485d6:	c7 44 24 04 f2 86 04 	movl   $0x80486f2,0x4(%esp)
 80485dd:	08 
 80485de:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80485e5:	e8 36 fe ff ff       	call   8048420 <strtok@plt>
 80485ea:	89 44 24 34          	mov    %eax,0x34(%esp)
 80485ee:	83 7c 24 34 00       	cmpl   $0x0,0x34(%esp)
 80485f3:	75 dc                	jne    80485d1 <main+0xa4>
 80485f5:	83 44 24 30 01       	addl   $0x1,0x30(%esp)
 80485fa:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485fe:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048602:	8d 44 24 20          	lea    0x20(%esp),%eax
 8048606:	89 44 24 04          	mov    %eax,0x4(%esp)
 804860a:	8d 44 24 24          	lea    0x24(%esp),%eax
 804860e:	89 04 24             	mov    %eax,(%esp)
 8048611:	e8 9a fd ff ff       	call   80483b0 <getline@plt>
 8048616:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 804861a:	83 7c 24 3c ff       	cmpl   $0xffffffff,0x3c(%esp)
 804861f:	75 80                	jne    80485a1 <main+0x74>
 8048621:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048624:	83 c0 04             	add    $0x4,%eax
 8048627:	8b 00                	mov    (%eax),%eax
 8048629:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804862d:	83 ea 01             	sub    $0x1,%edx
 8048630:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048634:	8b 44 24 28          	mov    0x28(%esp),%eax
 8048638:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804863c:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048640:	8b 44 24 30          	mov    0x30(%esp),%eax
 8048644:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048648:	c7 04 24 f4 86 04 08 	movl   $0x80486f4,(%esp)
 804864f:	e8 6c fd ff ff       	call   80483c0 <printf@plt>
 8048654:	b8 00 00 00 00       	mov    $0x0,%eax
 8048659:	c9                   	leave  
 804865a:	c3                   	ret    
 804865b:	66 90                	xchg   %ax,%ax
 804865d:	66 90                	xchg   %ax,%ax
 804865f:	90                   	nop

08048660 <__libc_csu_init>:
 8048660:	55                   	push   %ebp
 8048661:	57                   	push   %edi
 8048662:	31 ff                	xor    %edi,%edi
 8048664:	56                   	push   %esi
 8048665:	53                   	push   %ebx
 8048666:	e8 f5 fd ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 804866b:	81 c3 95 19 00 00    	add    $0x1995,%ebx
 8048671:	83 ec 1c             	sub    $0x1c,%esp
 8048674:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048678:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804867e:	e8 ed fc ff ff       	call   8048370 <_init>
 8048683:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048689:	29 c6                	sub    %eax,%esi
 804868b:	c1 fe 02             	sar    $0x2,%esi
 804868e:	85 f6                	test   %esi,%esi
 8048690:	74 27                	je     80486b9 <__libc_csu_init+0x59>
 8048692:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048698:	8b 44 24 38          	mov    0x38(%esp),%eax
 804869c:	89 2c 24             	mov    %ebp,(%esp)
 804869f:	89 44 24 08          	mov    %eax,0x8(%esp)
 80486a3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80486a7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80486ab:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80486b2:	83 c7 01             	add    $0x1,%edi
 80486b5:	39 f7                	cmp    %esi,%edi
 80486b7:	75 df                	jne    8048698 <__libc_csu_init+0x38>
 80486b9:	83 c4 1c             	add    $0x1c,%esp
 80486bc:	5b                   	pop    %ebx
 80486bd:	5e                   	pop    %esi
 80486be:	5f                   	pop    %edi
 80486bf:	5d                   	pop    %ebp
 80486c0:	c3                   	ret    
 80486c1:	eb 0d                	jmp    80486d0 <__libc_csu_fini>
 80486c3:	90                   	nop
 80486c4:	90                   	nop
 80486c5:	90                   	nop
 80486c6:	90                   	nop
 80486c7:	90                   	nop
 80486c8:	90                   	nop
 80486c9:	90                   	nop
 80486ca:	90                   	nop
 80486cb:	90                   	nop
 80486cc:	90                   	nop
 80486cd:	90                   	nop
 80486ce:	90                   	nop
 80486cf:	90                   	nop

080486d0 <__libc_csu_fini>:
 80486d0:	f3 c3                	repz ret 

Disassembly of section .fini:

080486d4 <_fini>:
 80486d4:	53                   	push   %ebx
 80486d5:	83 ec 08             	sub    $0x8,%esp
 80486d8:	e8 83 fd ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 80486dd:	81 c3 23 19 00 00    	add    $0x1923,%ebx
 80486e3:	83 c4 08             	add    $0x8,%esp
 80486e6:	5b                   	pop    %ebx
 80486e7:	c3                   	ret    
